; Script generated by the HM NIS Edit Script Wizard.

; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "LDV001"
!define PRODUCT_VERSION "1.0.0.0"
!define PRODUCT_PUBLISHER "KnWorks"
!define PRODUCT_WEB_SITE "http://www.knworks.co.kr"
!define PRODUCT_DIR_REGKEY "Software\Microsoft\Windows\CurrentVersion\App Paths\${PRODUCT_NAME}.exe"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"

!define	APP_REGPOS		 "SOFTWARE\${PRODUCT_NAME}"	    ; 설치 폴더가 저장될 위치, 프로그램이 HKCU 에 데이타 저장하는 레지스트리 - 언인스톨시 삭제될 레지스트리 위치
!define TXT_BRANDING_K           "${PRODUCT_NAME} 설치"
!define	APP_CLASSNAME            "${PRODUCT_NAME}"

# 한글 특화 부분 - 이름에 따라서 바꿔주자.
!define	EUL_RUL						"를"					; 을/를 문제 해결을 위한 define. $PRODUCT 에 따라 바뀐다.
!define I_KA						"이"					; 이/가 문제 해결을 위한 define. $PRODUCT 에 따라 바뀐다.
!define KOREAN_RUL										; mui 외의 부분에서 을/를 문제가 발생하는것을 해결하기 위한부분- NSIS2.0 패치가 적용되어야 작동한다.

; MUI 1.67 compatible ------
;!include "MUI.nsh"
!include MUI2.nsh
!include "sections.nsh"										; section selection 매크로 사용
!define MUI_CUSTOMFUNCTION_GUIINIT .muiCustomGuiInit		                                ; MUI 커스텀 GUI INIT 함수 정의

; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON "${NSISDIR}\Contrib\Graphics\Icons\modern-install.ico"
!define MUI_UNICON "${NSISDIR}\Contrib\Graphics\Icons\win-uninstall.ico"

!define MUI_UNFINISHPAGE_NOAUTOCLOSE						                ; 언인스톨 종료시 자동으로 닫히지 않게 하기.

!define INSTALL_DIR "C:\kakao\work\knwrpa\python\${PRODUCT_PUBLISHER}\${PRODUCT_NAME}"

; Welcome page
;!insertmacro MUI_PAGE_WELCOME
; Directory page
;!insertmacro MUI_PAGE_DIRECTORY
; Instfiles page
;!insertmacro MUI_PAGE_INSTFILES
; Finish page
;!define MUI_FINISHPAGE_RUN "$INSTDIR\${PRODUCT_NAME}.exe"
;!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_CONFIRM								; 언인스톨
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "Korean"

; MUI end ------
# 고정 내용 설정 (언어 종속)
LangString TXT_DEFAULT_INSTALL			${LANG_KOREAN}	"기본설치"
LangString TXT_DEFAULT_REINSTALL		${LANG_KOREAN}	"재설치"

LangString TXT_BRANDING	                ${LANG_KOREAN}	"${TXT_BRANDING_K}"
LangString TXT_DELETE_ALL_FILES         ${LANG_KOREAN}  "프로그램이 설치된후 생성된 파일등이 설치 폴더($INSTDIR)에 일부 남아 있습니다.$\r$\n$\r$\n 프로그램이 설치 되었던 폴더를 완전히 삭제하시겠습니까?"
LangString TXT_DELETE_PREVIEW_FILES     ${LANG_KOREAN}  "프린터출력이 설치되어 있습니다.$\r$\n$\r$\n이전 프로그램을 완전히 삭제하여야 합니다."
LangString TXT_STILLRUN_EXIT_PROGRAM	${LANG_KOREAN}  "실행중 입니다. 프로그램을 먼저 종료해 주세요."
LangString TXT_EXIT_PROGRAM				${LANG_KOREAN}  "이미 프린터출력이 설치되어 실행중입니다."
LangString TXT_NEED_ADMIN_PRIVILEGE		${LANG_KOREAN}  "현재 고객님은 제한된 계정 사용자로 프린터출력을 설치하실 수 없습니다.$\r$\n$\r$\n관리자 계정으로 로그인하신 후 재설치해 주시기 바랍니다.$\r$\n$\r$\n수동설치를 원하시면 비즈멜론 고객센터로 연락주시기 바랍니다.$\r$\n$\r$\n설치를 중단하시겠습니까?"

Name "${PRODUCT_NAME}"
OutFile "${PRODUCT_NAME}Setup.exe"
InstallDir "${INSTALL_DIR}"
InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY}" ""
ShowInstDetails show				                        ; 설치내용 자세히 보기 여부(hide|show|nevershow)
ShowUnInstDetails show                                                  ; 언인스톨 자세히 보기 여부(hide|show|nevershow)
AutoCloseWindow true                                                    ; 완료후 설치프로그램 자동 닫기
AllowRootDirInstall false                                               ; 루트 폴더에 설치하지 못하도록 한다.
CRCCheck on                                                             ; 시작시 CRC 검사를 한다. (디폴트) (on|off|force)
SetOverwrite on                                                         ; 파일 복사시 기본적으로 덮어쓰기 한다(디폴트) (on|off|try|ifnewer)
XPStyle on                                                              ; xp manifest 사용 여부
BrandingText	"$(TXT_BRANDING)"					; 하단 인스톨러 텍스트 바꿀때 사용

;Request application privileges for Windows Vista
RequestExecutionLevel admin 

; 언인스톨러 인증 서명
!uninstfinalize '"sign.bat" "%1"'

Section "MainSection" SEC01
  Push "${APP_CLASSNAME}"
  Call CheckAndCloseApp
  
  KillProcDLL::KillProc "${PRODUCT_NAME}.exe"
  
  SetOutPath "$INSTDIR"
  File "..\dist\${PRODUCT_NAME}.exe"

  CreateDirectory "$INSTDIR\input"
  CreateDirectory "$INSTDIR\output"
  CreateDirectory "$INSTDIR\models"
  SetOutPath "$INSTDIR\models"
  File "..\models\yolov8x-face-lindevs.pt"
  File "..\models\best.pt"
  
  CreateShortCut "$DESKTOP\${PRODUCT_NAME}.lnk" "$INSTDIR\${PRODUCT_NAME}.exe"
  
  ;Call InstallFirefox
  
  WriteRegStr HKLM  ${APP_REGPOS} ""	 ""
  WriteRegStr HKCU	${APP_REGPOS} ""	 ""
  
  WriteRegStr HKCR "${PRODUCT_NAME}\shell\open\command" "" "$\"$INSTDIR\${PRODUCT_NAME}.exe$\" $\"%1$\""
  WriteRegStr HKCR "${PRODUCT_NAME}\DefaultIcon" "" "$INSTDIR\${PRODUCT_NAME}.exe,0"
  WriteRegStr HKCR "${PRODUCT_NAME}" "URL Protocol" ""
  
  ;WriteRegDWORD HKCU "Software\Microsoft\Internet Explorer\ProtocolExecute\${PRODUCT_NAME}" "WarnOnOpen" 00000000
  
  ; 작업 스케줄러 등록 스크립트 실행
  ;nsExec::Exec '"schtasks.exe" /Create /SC HOURLY /TN "${PRODUCT_NAME}" /TR "$INSTDIR\${PRODUCT_NAME}.exe" /RU SYSTEM /RL HIGHEST'
  
SectionEnd

Section -AdditionalIcons
  SetOutPath $INSTDIR
  CreateShortCut "$SMPROGRAMS\${PRODUCT_PUBLISHER}\${PRODUCT_NAME} 삭제.lnk" "$INSTDIR\Un${PRODUCT_NAME}.exe"
SectionEnd

Section -Post
  WriteUninstaller "$INSTDIR\Un${PRODUCT_NAME}.exe"
  WriteRegStr HKLM "${PRODUCT_DIR_REGKEY}" "" "$INSTDIR\${PRODUCT_NAME}.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\Un${PRODUCT_NAME}.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\${PRODUCT_NAME}.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
SectionEnd

Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "$(^Name)는(은) 완전히 제거되었습니다."
FunctionEnd

;Function un.onInit
  ;MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "$(^Name)을(를) 제거하시겠습니까?" IDYES +2
  ;Abort
;FunctionEnd

Function .onInit
  IfFileExists "${INSTALL_DIR}\*.*" 0 CreateFolder
  CreateFolder:
    CreateDirectory "${INSTALL_DIR}"
	
  StrCpy $INSTDIR "${INSTALL_DIR}"
FunctionEnd

Section Uninstall
  Push "${APP_CLASSNAME}"
  Call un.CheckAndCloseApp

  RMDir	/r "$SMPROGRAMS\${PRODUCT_PUBLISHER}"		; 프로그램 그룹 지우기

  StrCmp "${PRODUCT_PUBLISHER}" "" Skip
	RMDir "$SMPROGRAMS\${PRODUCT_PUBLISHER}"
  Skip:
  
  Delete "$INSTDIR\Un${PRODUCT_NAME}.exe"

  DeleteRegKey	HKLM  ${APP_REGPOS}
  DeleteRegKey	HKCU  ${APP_REGPOS}
  
  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  DeleteRegKey HKLM "${PRODUCT_DIR_REGKEY}"
  
  DeleteRegKey HKCR "${PRODUCT_NAME}"
  ;DeleteRegKey HKCU "Software\Microsoft\Internet Explorer\ProtocolExecute\${PRODUCT_NAME}"
  
  nsExec::Exec '"schtasks.exe" /Delete /TN "${PRODUCT_NAME}" /F'
  
  IfFileExists $INSTDIR\*.* 0 SkipDel
	MessageBox MB_ICONINFORMATION|MB_YESNO $(TXT_DELETE_ALL_FILES) IDNO SkipDel
	RMDir /r "$INSTDIR"
	RMDir /REBOOTOK "$INSTDIR"
  SkipDel:
  
  SetAutoClose true
SectionEnd

## GUI 초기화 할때 처리 ##
Function .muiCustomGuiInit
	call CheckAccountType							   ; ADMIN 권한을 가지고 있는지 체크한다.
FunctionEnd

;----------------------------------------------------------------------------------------
; 프로그램의 클래스를 이용하여서 프로그램이 실행중인지 체크하고, 종료시킨다.
; 호출전 Push 로 꼭 함수 이름을 보내줘야 한다.
Function CheckAndCloseApp
	Pop	$R0					; GET WINDOW CLASS NAME
	loop1:
		FindWindow $R1 "" "$R0"
		IntCmp $R1 0 done1
		SendMessage $R1 16 0 0											; WM_CLOSE
		;SendMessage $R1 2 0 0										; WM_DESTROY
		Sleep 1000
                MessageBox MB_OK "${PRODUCT_NAME}${EUL_RUL} $(TXT_STILLRUN_EXIT_PROGRAM)"
		FindWindow $R1 "" "$R0"
		IntCmp $R1 0 done1
		MessageBox MB_OK "${PRODUCT_NAME}${EUL_RUL} $(TXT_STILLRUN_EXIT_PROGRAM)"
		goto loop1
	done1:
FunctionEnd

;----------------------------------------------------------------------------------------
; 프로그램의 클래스를 이용하여서 프로그램이 실행중인지 체크하고, 종료시킨다.
; 호출전 Push 로 꼭 윈도우 클래스 이름을 보내줘야 한다.
; uninstall 전용
Function un.CheckAndCloseApp
	Pop	$R0					; GET WINDOW CLASS NAME
	loop1:
		FindWindow $R1 "" "$R0"
		IntCmp $R1 0 done1
		SendMessage $R1 16 0 0											; WM_CLOSE
		;SendMessage $R1 2 0 0										; WM_DESTROY
		Sleep 1000
                MessageBox MB_OK "${PRODUCT_NAME}${EUL_RUL} $(TXT_STILLRUN_EXIT_PROGRAM)"
		FindWindow $R1 "" "$R0"
		IntCmp $R1 0 done1
		MessageBox MB_OK "${PRODUCT_NAME}${EUL_RUL} $(TXT_STILLRUN_EXIT_PROGRAM)"
		goto loop1
	done1:
FunctionEnd

;----------------------------------------------------------------------------------------
; 어드민여부를 체크하고, 경고메시지 출력후 설치를 중단한다
; contrib\UserInfo\userinfo.nsi 참고
Function CheckAccountType
	ReserveFile	"${NSISDIR}\Plugins\x86-ansi\UserInfo.dll"				; solid compressing 을 위한 file reserve
	ClearErrors
	UserInfo::GetName
	IfErrors done					; win9x 이다..
	Pop $0
	UserInfo::GetAccountType
	Pop $1
	StrCmp $1 "Admin" done 0		; admin 이면 ok
	MessageBox MB_YESNO  $(TXT_NEED_ADMIN_PRIVILEGE) IDNO done
	abort							; 설치 중단.
	done:
FunctionEnd